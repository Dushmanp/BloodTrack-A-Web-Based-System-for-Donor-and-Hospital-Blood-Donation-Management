@model CampaignEditView
@{
    ViewData["Title"] = "Add Campaign";

    ViewData["DonarDonationActive"] = "active";
  
}
@inject DropDown.IBloodBankDDL bloodBankDDL
<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <h4 class="page-title">@ViewData["Title"]</h4>
        </div>
    </div>
</div>
<!-- end page title -->
@using (Html.BeginForm("Add", "Campaign", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.Data.ReturnURL, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.ReturnURL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Data.ReturnURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.Data.CampaignID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.CampaignID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Data.CampaignID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.OrganizerName, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.OrganizerName, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.OrganizerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.OrganizerAddress, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.OrganizerAddress, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus", @rows = 6 } })
                            @Html.ValidationMessageFor(model => model.Data.OrganizerAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.Email, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.Email, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.PhoneNumber, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.PhoneNumber, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                      <div class="form-group row">
                        @Html.LabelFor(model => model.Data.VerifiedBy, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.VerifiedBy, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.VerifiedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.NumberOfDonors, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.NumberOfDonors, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.NumberOfDonors, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.TargetAddress, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.TargetAddress, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" , @rows = 6 } })
                            @Html.ValidationMessageFor(model => model.Data.TargetLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.TargetLocation, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("Data.TargetLocation", await bloodBankDDL.LocationList(), "(Select Blood Bank)", htmlAttributes: new { @class = "", id = "cmbCategoryMainID" })
                            @Html.ValidationMessageFor(model => model.Data.TargetLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                      <div class="form-group row">
                        @Html.LabelFor(model => model.Data.StartDate, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.StartDate, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.EndDate, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Data.EndDate, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Data.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                   
                    <div class="form-group row">
                        @Html.LabelFor(model => model.FileUpload, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.FileUpload, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Data.ActiveStatus, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8 pt-2">
                            <div class="custom-control custom-switch">
                                @Html.CheckBoxFor(model => model.Data.ActiveStatusBool, new { @class = "custom-control-input checkbox-success", id = "customSwitch1" })
                                <label class="custom-control-label" for="customSwitch1">Active</label>
                            </div>
                        </div>
                    </div>


                    <div class="form-group row">
                        <div class="col-4">
                        </div>
                        <div class="col-8">
                            <button type="submit" class="btn btn-danger mr-2">Add</button>
                            &nbsp;
                            <a href="@Model.Data.ReturnURL">Cancel</a>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

    </script>

}
