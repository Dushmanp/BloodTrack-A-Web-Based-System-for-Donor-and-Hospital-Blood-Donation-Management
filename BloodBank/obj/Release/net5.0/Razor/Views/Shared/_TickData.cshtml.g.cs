#pragma checksum "F:\Asure Final Project\BloodBank\Views\Shared\_TickData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5bfb696bd184b2018d0c5c25a180a431165bb8a4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__TickData), @"mvc.1.0.view", @"/Views/Shared/_TickData.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\Asure Final Project\BloodBank\Views\_ViewImports.cshtml"
using BloodBank;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Asure Final Project\BloodBank\Views\_ViewImports.cshtml"
using Donor.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\Asure Final Project\BloodBank\Views\_ViewImports.cshtml"
using BloodBank.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5bfb696bd184b2018d0c5c25a180a431165bb8a4", @"/Views/Shared/_TickData.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f080757e0589bf80119b31399733e15cff69b271", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Shared__TickData : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""modal fade"" id=""modal_Tick"" tabindex=""-1"" role=""dialog""
     aria-labelledby=""scrollableModalTitle"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-scrollable modal"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""scrollableModalTitle"">Search and Tick</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body modal-min-height"">
                <div class=""row"">
                    <div class=""col-lg-8"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5bfb696bd184b2018d0c5c25a180a431165bb8a44507", async() => {
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""inputPassword2"" class=""sr-only"">Search</label>
                                <input id=""txtSearchTick"" type=""search"" class=""form-control"" placeholder=""Search..."" onkeyup=""SearchTickStart()"">
                            </div>
                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>

                </div> <!-- end row -->

                <div id=""divLoadTick"" class=""d-flex justify-content-center mt-2 position-absolute w-100"">
                    <div id=""spnLoadTick"" class=""spinner-border "" role=""status""></div>
                </div>

                <div id=""divTickRecord"" class=""m-0 p-0""></div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" disabled=""disabled"" id=""bTick"" onclick=""TickRecord()"">Choose</button>
                <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Cancel</button>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<input type=""hidden"" id=""valueId"" />
<input type=""hidden"" id=""nameId"" />
<input type=""hidden"" id=""buttonId"" />
<input type=""hidden"" id=""jsonURL"" />

<script>

    var OpenTickData = function (valueId, nameId, buttonId, jsonURL) {

        ");
            WriteLiteral(@"$(""#valueId"").val(valueId);
        $(""#nameId"").val(nameId);
        $(""#buttonId"").val(buttonId);
        $(""#jsonURL"").val(jsonURL);

        $(""#modal_Tick"").modal('show');
        $('#spnLoadTick').hide();
        $(""#txtSearchTick"").val('');
        LoadTickData(jsonURL);
    }

    var LoadTickData = function (jsonURL) {
        $('#spnLoad').hide();

        var AppendDIV = ""divTickRecord"";
        $('#' + AppendDIV).css('visibility', 'hidden');
        $('#divLoadTick').show();
        $('#spnLoadTick').show();

        setTimeout(function () {
            $.ajax({

                type: ""GET"",
                url: jsonURL,
                data: { SystemItem: ""N"" },
                success: function (result) {
                    $('#' + AppendDIV).html(result);
                    $('#divLoadTick').hide();
                    $('#spnLoadTick').hide();
                    $('#' + AppendDIV).css('visibility', 'visible');
                    $(""#bTick"").removeAttr(""disable");
            WriteLiteral(@"d"");

                    ApplyTicked();
                },
                error: function (result) {
                    alert(result.responseText);
                }
            })
        }, 500);
    }

    var ApplyTicked = function () {
        var valueId = $(""#valueId"").val();
        var SelectedIDList = $(""#"" + valueId).val();

        $('.chkTick:checkbox').each(function () {
            var SelectedID = $(this).data('id');
            if (SelectedIDList.includes(SelectedID)) {
                $(this).prop('checked', true)
            }
        });
    }

    var TickRecord = function () {
        var SelectedIDList = """";
        var SelectedNameList = """";

        $('.chkTick:checkbox:checked').each(function () {
            var SelectedID = $(this).data('id');
            var SelectedName = $(this).data('name');

            if (SelectedIDList == """") {
                SelectedIDList = SelectedID;
                SelectedNameList = SelectedName;
            } els");
            WriteLiteral(@"e {
                SelectedIDList = SelectedIDList + "","" + SelectedID;
                SelectedNameList = SelectedNameList + "", "" + SelectedName;
            }
        });

        var valueId = $(""#valueId"").val();
        var nameId = $(""#nameId"").val();
        var buttonId = $(""#buttonId"").val();

        $(""#"" + valueId).val(SelectedIDList);
        $(""#"" + nameId).val(SelectedNameList);
        $(""#"" + buttonId).html(SelectedNameList);

        $(""#modal_Tick"").modal(""hide"");
    }


    function SearchTickStart() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById(""txtSearchTick"");
        filter = input.value.toUpperCase();
        table = document.getElementById(""tblTickBody"");
        tr = table.getElementsByTagName(""tr"");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName(""td"")[1];
            td1 = tr[i].getElementsByTagName(""td"")[2];

            if (td) {
");
            WriteLiteral(@"                txtValue = td.textContent || td.innerText;
                txtValue = txtValue + ' ' + td1.textContent || td1.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = """";
                } else {
                    tr[i].style.display = ""none"";
                }
            }
        }
    }

</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
